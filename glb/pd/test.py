import pandas as pd
import matplotlib.pyplot as plt
# df = pd.read_excel('https://www.gairuo.com/file/data/dataset/team.xlsx')
def test(log, obj):
    print(f"*******************************************{log}*******************************************")
    print(obj)
df = pd.read_excel('team.xlsx')

test("所有数据",df)
test("前5条数据",df.head(5))
test("行数和列数",df.shape)
test("索引，数据类型和内存信息",df.info())
test("数值类型列的汇总统计[总数（count），平均数（mean），标准差（std）]",df.describe())
test("各个字段类型",df.dtypes)
test("数据行和列名",df.axes)
test("列名",df.columns)
df.set_index('name', inplace=True)
test("建立索引",df)
test("查看指定列 单列",df['Q1'])
test("查看指定列 多列",df[['team','Q1']])
test("查看指定列 多列(loc)",df.loc[:,['team','Q1']])
test("用指定索引选取行",df[df.index=='Liver'])
test("取前三行",df[0:3])
test("在前10行中每两行取一行",df[0:10:2])
test("取前10行(iloc)",df.iloc[0:10,:])
test("指定单行多列",df.loc['Ben','Q1':'Q4'])
test("指定单行多列",df.loc['Eorge':'Alexander','team':'Q4'])
test("条件选择 单一条件 Q1列大于90",df[df['Q1']>90])
test("条件选择 单一条件 team列为‘C’",df[df['team']=='C'])
test("条件选择 单一条件 指定索引即原数据中的name",df[df.index=='Oscar'])
test("条件选择 组合条件(and关系) Q1>90 and team='C'",df[(df['Q1']>90 ) & (df['team']=='C')])
test("条件选择 组合条件(多重筛选) Q1>90 and team='C'",df[df['team']=='C'].loc[df['Q1']>90])
test("排序 按Q1列数据升序排列",df.sort_values(by='Q1'))
test("排序 按Q1列数据升序排列 降序",df.sort_values(by='Q1',ascending=False))
test("排序 team升序 Q1降序",df.sort_values(['team','Q1'],ascending=[True,False]))
test("分组聚合 按团队分组对应列相加",df.groupby('team').sum())
test("分组聚合 按团队分组对应列求平均值",df.groupby('team').mean())
test("分组聚合 按团队分组Q1求和Q2总数Q3平均Q4最大值",df.groupby('team').agg({'Q1':'sum','Q2':'count','Q3':'mean','Q4':'max'}))
test("数据转换 行列翻转",df.groupby('team').sum().T)
test("数据转换 stack",df.groupby('team').sum().stack())
test("数据转换 unstack",df.groupby('team').sum().unstack())
df['one']=1
test("增加一个固定值的列",df)
df['total']=df.Q1+df.Q2+df.Q3+df.Q4
test("增加总成绩列",df)
df['total2']=df.loc[:,'Q1':'Q4'].apply(lambda x:sum(x),axis=1)
test("将计算得来的结果赋值给新列",df)
df['avg']=df.total/4
test("增加平均成绩列",df)
df = pd.read_excel('team.xlsx')
test("恢复原始数据",df)
test("每列的最大值",df.max())
plt.plot(df['Q1'])
plt.show()
# print(type(df['Q1'].plot()))
# test("",)
# test("",)
# test("",)
# test("",)
